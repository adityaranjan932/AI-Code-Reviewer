// c:\Users\adity\OneDrive\Desktop\codeReview\Backend\src\models\ReviewHistory.model.js
const mongoose = require('mongoose');

const reviewHistorySchema = new mongoose.Schema({
  user: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true,
    index: true,
  },
  type: {
    type: String,
    enum: ['code_review', 'image_review'], // Distinguish between code and image reviews
    required: true,
  },
  language: { // New field to store language or type
    type: String,
    default: 'N/A', // Default if not specified
  },
  prompt: { // For code reviews, this is the code. For image reviews, this is the textual prompt.
    type: String,
    required: true,
  },
  reviewContent: { // The actual review text generated by the AI
    type: String,
    required: true,
  },
  imageAssociated: { // Flag if an image was part of the original request (for image_review type)
    type: Boolean,
    default: false,
  },
  // You could add a snippet of the prompt or review for quick display in a list
  displaySnippet: {
    type: String,
    trim: true,
  },
  createdAt: {
    type: Date,
    default: Date.now,
  },
});

// Method to generate a snippet for display
reviewHistorySchema.pre('save', function(next) {
  if (this.isModified('prompt') || this.isModified('reviewContent')) {
    if (this.type === 'code_review') {
      this.displaySnippet = this.prompt.substring(0, 100) + (this.prompt.length > 100 ? '...' : '');
    } else if (this.type === 'image_review') {
      this.displaySnippet = this.prompt.substring(0, 100) + (this.prompt.length > 100 ? '...' : '');
    } else {
      this.displaySnippet = (this.prompt || this.reviewContent || '').substring(0, 100) + '...';
    }
  }
  next();
});

const ReviewHistory = mongoose.model('ReviewHistory', reviewHistorySchema);

module.exports = ReviewHistory;
